using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using Basically.Entities;
using Basically.Utility;

public class #SCRIPTNAME# : Entity {
    #region Client Callbacks
    #if BASICALLY_CLIENT

    protected internal override void OnClientStart() {

    }

    protected internal override void OnClientTick() {
        
    }

    protected internal override void OnClientUpdate() {
        
    }

    protected internal override void OnClientLateUpdate() {
        
    }

    #endif
    #endregion

    #region Server Callbacks
    #if BASICALLY_SERVER

    protected internal override void OnServerStart() {
        
    }

    protected internal override void OnServerTick() {
        
    }

    #endif
    #endregion

    #region Entity Callbacks

    protected internal override void Interpolate(EntityState from, EntityState to, float interpAmount) {
        base.Interpolate(from, to, interpAmount);
    }

    #endregion

    #region Serializing/Deseriazing

    protected internal override void Serialize(ref IParameters parameters) {

    }

    protected internal override void Deserialize(IParameters parameters) {

    }

    #endregion
}
